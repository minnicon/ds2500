import statistics
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.neighbors import KNeighborsClassifier


FILE = "Indicators_of_Anxiety_or_Depression_Based_on_Reported_Frequency_of_Symptoms_During_Last_7_Days.csv"

# read in csv, clean data: organize by age and by symptoms of depressive 
# disorder, anxiety disorder, or both 

# analyze difference between years 2020-2021 (??)
# covid years were 2020-2021 so analyze differences between 2020-2021 and 2022-2023
# use "value" column

# use linear regression, find correlation between age and anxiety/depression levels

# knn classification - predict and classify anxiety/depression levels in 2024, 
# and can compare it with actual data from first two months of 2024

def clean_data(df):
    '''
    Take in a dataframe and sort by age, clean data to so that 
    'Time Period' only includes the year and not the entire date
    '''
    age_data = df[df["Group"] == "By Age"]
    return age_data

def classifier(df, df_year):
    ''' Create classifier for given age group and predict anxiety/depression 
        levels in 2024 and compare with actual
    '''
    # classifier
    model = KNeighborsClassifier(n_neighbors=6)
    features = df['Subgroup'] # figure out to put numerical value in for features
    labels = df['Value']
    x_train, x_test, y_train, y_test = train_test_split(features, labels, random_state=0)
    model.fit(x_train, y_train)
    predict = model.predict(x_test)
    
    # 2024 prediction
    year = df_year[(df_year['Time Period End Date'] == 2024) & (df_year['Subgroup'] == '18 - 29 years')]
    true_pred = year['Value'].values
    year_data = year['By Age']
    year_pred = model.predict(year_data)
    
    return classification_report(y_test, predict, output_dict=True), year_pred, true_pred
    
def analysis_2020(df):
    ''' Find correlation between age groups and mean anxiety/depression levels in 2020
    '''
    year_data = df[df['Time Period End Date'] == 2020] # clean for year
    mean = statistics.mean(year_data['Value'])
    correlation = statistics.correlation(year_data['Subgroup'], mean)
    sd = statistics.stdev(mean)
    var = statistics.variance(mean)
    return correlation, sd, var
    
def analysis_2024(true_preds, year_pred):
    ''' Find variance and sd calculations comparing predicted value in 2024 to actual values
    '''
    return var, sd

def linear_regression():
    ''' Perform linear regression on dataset and plot
    '''
    pass

def compare_years():
    '''
    analyze difference between years 2020-2021 (??)
    covid years were 2020-2021 so analyze differences between 2020-2021 and 2022-2023
    use "value" column
    '''
    pass


def main():
    # read in and clean data
    data = pd.read_csv(FILE)
    cleaned_data = clean_data(data)
    print(cleaned_data['year'])
    
    # predict values for 2024
    report, pred, true_pred = classifier(cleaned_data, cleaned_data)
    
    # standard deviation and variance analysis for predicted 2024 values
    var_2024, sd_2024 = analysis_2024(true_pred, pred)
    
    # Find correlation between age groups and mean anxiety/depression levels in 2020
    # Include standard deviation and variance analysis calculations
    corr_2020, sd_2020, var_2020 = analysis_2020(cleaned_data)
    
if __name__ == "__main__":
    main()
